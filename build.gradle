

plugins {
    id 'java'
    id("io.qameta.allure") version "2.11.2"
}

repositories {
    mavenCentral()
}

allure {
    version = '2.14.0'
}

dependencies {
//    classpath("io.qameta.allure.gradle.allure:allure-plugin:2.11.2")

    testImplementation(
            "org.junit.jupiter:junit-jupiter:5.9.3",
            'io.qameta.allure:allure-junit5:2.13.8',
            "io.rest-assured:rest-assured:5.4.0",
            "com.fasterxml.jackson.core:jackson-databind:2.16.1",
            "com.github.javafaker:javafaker:1.0.2",
            "org.postgresql:postgresql:42.7.3",
            "org.assertj:assertj-core:3.25.3")

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//allure {
//    version = '2.13.6'
//    aspectjVersion = '1.9.5'
//    aspectjweaver = true
//    autoconfigure = true
//    resultsDir = file('build/allure-results')
//    reportDir = file('build/allure-report')
//}

test {
    useJUnitPlatform()
//    finalizedBy 'allureReport'
}

//tasks.register('allureReport', io.qameta.allure.gradle.AllureReport) {
//    dependsOn test
//}

test {
    useJUnitPlatform()
}
//tasks.register('allureReport', AllureReport) {
//    clean = true
//    dependsOn test
//    resultsDirs = files('build/allure-results')
//}
//
//tasks.register('allureServe', AllureServe) {
//    dependsOn test
//    resultsDirs = files('build/allure-results')
//}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperty 'junit.jupiter.tags', 'XClient'
}